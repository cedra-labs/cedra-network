[package]
name = "cedra-block-executor"
description = "Cedra block transaction executor library, parallel execution via Block-STM"
version = "0.1.0"

# Workspace inherited keys
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
repository = { workspace = true }
rust-version = { workspace = true }

[dependencies]
ambassador = { workspace = true }
anyhow = { workspace = true }
cedra-aggregator = { workspace = true }
cedra-drop-helper = { workspace = true }
cedra-infallible = { workspace = true }
cedra-logger = { workspace = true }
cedra-metrics-core = { workspace = true }
cedra-mvhashmap = { workspace = true }
cedra-types = { workspace = true }
cedra-vm-environment = { workspace = true }
cedra-vm-logging = { workspace = true }
cedra-vm-types = { workspace = true }
arc-swap = { workspace = true }
bcs = { workspace = true }
bytes = { workspace = true }
claims = { workspace = true }
concurrent-queue = { workspace = true }
criterion = { workspace = true, optional = true }
crossbeam = { workspace = true }
derivative = { workspace = true }
fail = { workspace = true }
hashbrown = { workspace = true }
move-binary-format = { workspace = true }
move-core-types = { workspace = true }
move-vm-runtime = { workspace = true }
move-vm-types = { workspace = true }
num_cpus = { workspace = true }
once_cell = { workspace = true }
parking_lot = { workspace = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
rand = { workspace = true }
rayon = { workspace = true }
scopeguard = { workspace = true }

[dev-dependencies]
cedra-aggregator = { workspace = true, features = ["testing"] }
cedra-transaction-simulation = { workspace = true }
cedra-types = { workspace = true, features = ["testing"] }
criterion = { workspace = true }
fail = { workspace = true, features = ["failpoints"] }
itertools = { workspace = true }
move-vm-runtime = { workspace = true, features = ["testing"] }
move-vm-types = { workspace = true, features = ["testing"] }
proptest = { workspace = true }
proptest-derive = { workspace = true }
rand = { workspace = true }
test-case = { workspace = true }

[features]
testing = []
fuzzing = ["criterion", "proptest", "proptest-derive"]

[[bench]]
name = "scheduler_benches"
harness = false
required-features = ["fuzzing"]
