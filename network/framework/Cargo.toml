[package]
name = "cedra-network"
description = "Cedra networking stack"
version = "0.1.0"

# Workspace inherited keys
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
repository = { workspace = true }
rust-version = { workspace = true }

[dependencies]
anyhow = { workspace = true }
cedra-bitvec = { workspace = true }
cedra-channels = { workspace = true }
cedra-compression = { workspace = true }
cedra-config = { workspace = true }
cedra-crypto = { workspace = true }
cedra-id-generator = { workspace = true }
cedra-infallible = { workspace = true }
cedra-logger = { workspace = true }
cedra-memsocket = { workspace = true, optional = true }
cedra-metrics-core = { workspace = true }
cedra-netcore = { workspace = true }
cedra-num-variants = { workspace = true }
cedra-peer-monitoring-service-types = { workspace = true }
cedra-proptest-helpers = { workspace = true, optional = true }
cedra-short-hex-str = { workspace = true }
cedra-time-service = { workspace = true }
cedra-types = { workspace = true }
arc-swap = { workspace = true }
async-trait = { workspace = true }
bcs = { workspace = true }
bytes = { workspace = true }
futures = { workspace = true }
futures-util = { workspace = true }
hex = { workspace = true }
itertools = { workspace = true }
maplit = { workspace = true }
once_cell = { workspace = true }
ordered-float = { workspace = true }
pin-project = { workspace = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
rand = { workspace = true, features = ["small_rng"] }
# Note: we cannot rely on the workspace version of rand. So we use this workaround. See:
# https://github.com/cedra-labs/cedra-network/blob/main/state-sync/cedra-data-client/Cargo.toml#L41.
# See also https://github.com/cedra-labs/cedra-network/issues/13031
rand_latest = { package = "rand", version = "0.8.5" }
serde = { workspace = true }
serde_bytes = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tokio-retry = { workspace = true }
tokio-stream = { workspace = true }
tokio-util = { workspace = true }

[dev-dependencies]
cedra-bitvec = { workspace = true, features = ["fuzzing"] }
cedra-config = { workspace = true, features = ["testing"] }
cedra-memsocket = { workspace = true }
cedra-netcore = { workspace = true, features = ["testing"] }
cedra-proptest-helpers = { workspace = true }
cedra-time-service = { workspace = true, features = ["testing"] }
cedra-types = { workspace = true, features = ["fuzzing"] }
proptest = { workspace = true }
proptest-derive = { workspace = true }
rand_core = { workspace = true }

[features]
default = []
fuzzing = ["cedra-bitvec/fuzzing", "cedra-config/fuzzing", "cedra-crypto/fuzzing", "cedra-types/fuzzing", "cedra-proptest-helpers", "cedra-time-service/testing", "cedra-types/fuzzing", "cedra-memsocket/testing", "cedra-netcore/fuzzing", "proptest", "proptest-derive"]
testing = ["cedra-config/testing", "cedra-time-service/testing", "cedra-memsocket/testing", "cedra-netcore/testing"]

[package.metadata.cargo-machete]
ignored = ["serde_bytes"]
